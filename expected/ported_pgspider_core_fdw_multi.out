--Testcase 64:
CREATE EXTENSION pgspider_ext;
--Testcase 65:
CREATE EXTENSION postgres_fdw;
-- Enable to pushdown aggregate
SET enable_partitionwise_aggregate TO on;
-- Turn off leader node participation to avoid duplicate data error when executing
-- parallel query
SET parallel_leader_participation TO off;
--Testcase 66:
CREATE SERVER pgspider_ext_svr FOREIGN DATA WRAPPER pgspider_ext;
--Testcase 67:
CREATE USER MAPPING FOR public SERVER pgspider_ext_svr;
--Testcase 68:
CREATE TABLE test1 (i int,__spd_url text) PARTITION BY LIST (__spd_url);
--Testcase 69:
CREATE TABLE test2 (t text, t2 text, i int,__spd_url text) PARTITION BY LIST (__spd_url);
--- PGSpider 1
--Testcase 70:
CREATE SERVER pgspider_srv_1 FOREIGN DATA WRAPPER postgres_fdw OPTIONS (host '127.0.0.1', port '5433', dbname 'postgres');
--Testcase 71:
CREATE USER mapping for public server pgspider_srv_1 OPTIONS(user 'postgres',password 'postgres');
-- pgspider_ext table
--Testcase 72:
CREATE FOREIGN TABLE test1__pgspider_srv_1__test (i int,__spd_url text) SERVER pgspider_srv_1 OPTIONS (table_name 'test1');
CREATE FOREIGN TABLE test1_pgspider_srv_child1 PARTITION OF test1 FOR VALUES IN ('/pgspider_srv_1/') SERVER pgspider_ext_svr OPTIONS(child_name 'test1__pgspider_srv_1__test');
--Testcase 1:
SELECT * FROM test1__pgspider_srv_1__test ORDER BY i, __spd_url;
   i   |  __spd_url   
-------+--------------
     1 | /mysql_svr/
     1 | /sqlite_svr/
     1 | /tiny_svr/
   777 | /mysql_svr/
   777 | /mysql_svr/
   777 | /mysql_svr/
   777 | /mysql_svr/
  1111 | /post_svr/
 22222 | /sqlite_svr/
(9 rows)

--Testcase 2:
SELECT * FROM test1 ORDER BY i, __spd_url;
   i   |    __spd_url     
-------+------------------
     1 | /pgspider_srv_1/
     1 | /pgspider_srv_1/
     1 | /pgspider_srv_1/
   777 | /pgspider_srv_1/
   777 | /pgspider_srv_1/
   777 | /pgspider_srv_1/
   777 | /pgspider_srv_1/
  1111 | /pgspider_srv_1/
 22222 | /pgspider_srv_1/
(9 rows)

--Testcase 3:
SELECT i FROM test1__pgspider_srv_1__test ORDER BY i;
   i   
-------
     1
     1
     1
   777
   777
   777
   777
  1111
 22222
(9 rows)

--Testcase 4:
SELECT __spd_url FROM test1__pgspider_srv_1__test ORDER BY __spd_url;
  __spd_url   
--------------
 /mysql_svr/
 /mysql_svr/
 /mysql_svr/
 /mysql_svr/
 /mysql_svr/
 /post_svr/
 /sqlite_svr/
 /sqlite_svr/
 /tiny_svr/
(9 rows)

--Testcase 5:
SELECT i FROM test1 ORDER BY i;
   i   
-------
     1
     1
     1
   777
   777
   777
   777
  1111
 22222
(9 rows)

--Testcase 6:
SELECT __spd_url FROM test1 ORDER BY __spd_url;
    __spd_url     
------------------
 /pgspider_srv_1/
 /pgspider_srv_1/
 /pgspider_srv_1/
 /pgspider_srv_1/
 /pgspider_srv_1/
 /pgspider_srv_1/
 /pgspider_srv_1/
 /pgspider_srv_1/
 /pgspider_srv_1/
(9 rows)

--
--Testcase 73:
CREATE FOREIGN TABLE test2__pgspider_srv_1__test2 (t text, t2 text, i int,__spd_url text) SERVER pgspider_srv_1 OPTIONS (table_name 'test2');
CREATE FOREIGN TABLE test2_pgspider_srv_child1 PARTITION OF test2 FOR VALUES IN ('/pgspider_srv_1/') SERVER pgspider_ext_svr OPTIONS(child_name 'test2__pgspider_srv_1__test2');
--Testcase 7:
SELECT * FROM test2__pgspider_srv_1__test2 ORDER BY i, t2, __spd_url;
  t  | t2  | i |  __spd_url  
-----+-----+---+-------------
 aaa | bbb | 1 | /mysql_svr/
 aaa | bbb | 1 | /mysql_svr/
 aaa | bbb | 1 | /mysql_svr/
 aaa |     | 1 | /mysql_svr/
(4 rows)

--Testcase 8:
SELECT * FROM test2 ORDER BY i, t, t2, __spd_url;
  t  | t2  | i |    __spd_url     
-----+-----+---+------------------
 aaa | bbb | 1 | /pgspider_srv_1/
 aaa | bbb | 1 | /pgspider_srv_1/
 aaa | bbb | 1 | /pgspider_srv_1/
 aaa |     | 1 | /pgspider_srv_1/
(4 rows)

--Testcase 9:
SELECT i, t, t2 FROM test2__pgspider_srv_1__test2 ORDER BY i, t2;
 i |  t  | t2  
---+-----+-----
 1 | aaa | bbb
 1 | aaa | bbb
 1 | aaa | bbb
 1 | aaa | 
(4 rows)

--Testcase 10:
SELECT __spd_url FROM test2__pgspider_srv_1__test2 ORDER BY __spd_url;
  __spd_url  
-------------
 /mysql_svr/
 /mysql_svr/
 /mysql_svr/
 /mysql_svr/
(4 rows)

--Testcase 11:
SELECT i, t, t2 FROM test2 ORDER BY i, t2;
 i |  t  | t2  
---+-----+-----
 1 | aaa | bbb
 1 | aaa | bbb
 1 | aaa | bbb
 1 | aaa | 
(4 rows)

--Testcase 12:
SELECT __spd_url FROM test2 ORDER BY __spd_url;
    __spd_url     
------------------
 /pgspider_srv_1/
 /pgspider_srv_1/
 /pgspider_srv_1/
 /pgspider_srv_1/
(4 rows)

-- PGSpider Extension does not support SELECT IN
-- -- SELECT IN
-- --Testcase 13:
-- SELECT * FROM test1 IN ('/pgspider_srv_1pgspider_srv_2/') ORDER BY i;
-- --Testcase 14:
-- SELECT * FROM test1 IN ('/pgspider_srv_1pgspider_srv_2/') WHERE i<>0 ORDER BY i;
-- --Testcase 15:
-- SELECT * FROM test2 IN ('/pgspider_srv_2pgspider_srv_1/') ORDER BY i;
-- --Testcase 16:
-- SELECT * FROM test2 IN ('/pgspider_srv_2pgspider_srv_1/') WHERE i<>500 ORDER BY __spd_url;
-- --Testcase 17:
-- SELECT * FROM test1 IN ('/pgspider_srv_1/sqlite_svr/') ORDER BY i;
-- Currently, __spd_url of PGSpider Extension only show the partition key of the top layer.
-- Therefore, test cases which has WHERE condition with __spd_url for multi-layer will return 0 rows.
-- This point might be improved in the future.
--Testcase 18:
SELECT * FROM test1 WHERE __spd_url = '/pgspider_srv_1/sqlite_svr/' ORDER BY i;
 i | __spd_url 
---+-----------
(0 rows)

-- --Testcase 19:
-- SELECT * FROM test1 IN ('/pgspider_srv_1/mysql_svr/') ORDER BY i;
--Testcase 20:
SELECT * FROM test1 WHERE __spd_url = '/pgspider_srv_1/mysql_svr/' ORDER BY i;
 i | __spd_url 
---+-----------
(0 rows)

-- --Testcase 21:
-- SELECT * FROM test1 IN ('/pgspider_srv_1/post_svr/') ORDER BY i;
--Testcase 22:
SELECT * FROM test1 WHERE __spd_url = '/pgspider_srv_1/post_svr/' ORDER BY i;
 i | __spd_url 
---+-----------
(0 rows)

--
-- --Testcase 23:
-- SELECT * FROM test2 IN ('/pgspider_srv_1/mysql_svr/') ORDER BY i, t, t2, __spd_url;
--Testcase 24:
SELECT * FROM test2 WHERE __spd_url = '/pgspider_srv_1/mysql_svr/' ORDER BY i, t, t2, __spd_url;
 t | t2 | i | __spd_url 
---+----+---+-----------
(0 rows)

--- PGSpider 2
--Testcase 74:
CREATE SERVER pgspider_srv_2 FOREIGN DATA WRAPPER postgres_fdw OPTIONS (host '127.0.0.1', port '5434', dbname 'postgres');
--Testcase 75:
CREATE USER mapping for public server pgspider_srv_2 OPTIONS(user 'postgres',password 'postgres');
-- pgspider_core_fdw table
--Testcase 76:
CREATE FOREIGN TABLE test1__pgspider_srv_2__test (i int,__spd_url text) SERVER pgspider_srv_2 OPTIONS (table_name 'test1');
CREATE FOREIGN TABLE test1_pgspider_srv_child2 PARTITION OF test1 FOR VALUES IN ('/pgspider_srv_2/') SERVER pgspider_ext_svr OPTIONS(child_name 'test1__pgspider_srv_2__test');
--Testcase 25:
SELECT * FROM test1__pgspider_srv_2__test ORDER BY i, __spd_url;
  i   |   __spd_url    
------+----------------
    1 | /file_svr/
    2 | /file_svr/
    3 | /file_svr/
    4 | /file_svr/
 2001 | /influxdb_svr/
 2002 | /influxdb_svr/
 3001 | /griddb_svr/
 3002 | /griddb_svr/
(8 rows)

--Testcase 26:
SELECT * FROM test1 ORDER BY i, __spd_url;
   i   |    __spd_url     
-------+------------------
     1 | /pgspider_srv_1/
     1 | /pgspider_srv_1/
     1 | /pgspider_srv_1/
     1 | /pgspider_srv_2/
     2 | /pgspider_srv_2/
     3 | /pgspider_srv_2/
     4 | /pgspider_srv_2/
   777 | /pgspider_srv_1/
   777 | /pgspider_srv_1/
   777 | /pgspider_srv_1/
   777 | /pgspider_srv_1/
  1111 | /pgspider_srv_1/
  2001 | /pgspider_srv_2/
  2002 | /pgspider_srv_2/
  3001 | /pgspider_srv_2/
  3002 | /pgspider_srv_2/
 22222 | /pgspider_srv_1/
(17 rows)

--Testcase 27:
SELECT i FROM test1__pgspider_srv_2__test ORDER BY i;
  i   
------
    1
    2
    3
    4
 2001
 2002
 3001
 3002
(8 rows)

--Testcase 28:
SELECT __spd_url FROM test1__pgspider_srv_2__test ORDER BY __spd_url;
   __spd_url    
----------------
 /file_svr/
 /file_svr/
 /file_svr/
 /file_svr/
 /griddb_svr/
 /griddb_svr/
 /influxdb_svr/
 /influxdb_svr/
(8 rows)

--Testcase 29:
SELECT i FROM test1 ORDER BY i;
   i   
-------
     1
     1
     1
     1
     2
     3
     4
   777
   777
   777
   777
  1111
  2001
  2002
  3001
  3002
 22222
(17 rows)

--Testcase 30:
SELECT __spd_url FROM test1 ORDER BY __spd_url;
    __spd_url     
------------------
 /pgspider_srv_1/
 /pgspider_srv_1/
 /pgspider_srv_1/
 /pgspider_srv_1/
 /pgspider_srv_1/
 /pgspider_srv_1/
 /pgspider_srv_1/
 /pgspider_srv_1/
 /pgspider_srv_1/
 /pgspider_srv_2/
 /pgspider_srv_2/
 /pgspider_srv_2/
 /pgspider_srv_2/
 /pgspider_srv_2/
 /pgspider_srv_2/
 /pgspider_srv_2/
 /pgspider_srv_2/
(17 rows)

--
--Testcase 77:
CREATE FOREIGN TABLE test2__pgspider_srv_2__test2 (t text,t2 text,i int,__spd_url text) SERVER pgspider_srv_2 OPTIONS (table_name 'test2');
CREATE FOREIGN TABLE test2_pgspider_srv_child2 PARTITION OF test2 FOR VALUES IN ('/pgspider_srv_2/') SERVER pgspider_ext_svr OPTIONS(child_name 'test2__pgspider_srv_2__test2');
--Testcase 31:
SELECT * FROM test2__pgspider_srv_2__test2 ORDER BY i, t, t2, __spd_url;
    t     |    t2    |  i   |   __spd_url    
----------+----------+------+----------------
 influx1a | influx1b | 2101 | /influxdb_svr/
 influx2a | influx2b | 2102 | /influxdb_svr/
 influx3a | influx3b | 2103 | /influxdb_svr/
(3 rows)

--Testcase 32:
SELECT * FROM test2 ORDER BY i, t, t2, __spd_url;
    t     |    t2    |  i   |    __spd_url     
----------+----------+------+------------------
 aaa      | bbb      |    1 | /pgspider_srv_1/
 aaa      | bbb      |    1 | /pgspider_srv_1/
 aaa      | bbb      |    1 | /pgspider_srv_1/
 aaa      |          |    1 | /pgspider_srv_1/
 influx1a | influx1b | 2101 | /pgspider_srv_2/
 influx2a | influx2b | 2102 | /pgspider_srv_2/
 influx3a | influx3b | 2103 | /pgspider_srv_2/
(7 rows)

--Testcase 33:
SELECT t, t2, i FROM test2__pgspider_srv_2__test2 ORDER BY i, t2;
    t     |    t2    |  i   
----------+----------+------
 influx1a | influx1b | 2101
 influx2a | influx2b | 2102
 influx3a | influx3b | 2103
(3 rows)

--Testcase 34:
SELECT __spd_url FROM test2__pgspider_srv_2__test2 ORDER BY __spd_url;
   __spd_url    
----------------
 /influxdb_svr/
 /influxdb_svr/
 /influxdb_svr/
(3 rows)

--Testcase 35:
SELECT t, t2, i FROM test2 ORDER BY i, t2;
    t     |    t2    |  i   
----------+----------+------
 aaa      | bbb      |    1
 aaa      | bbb      |    1
 aaa      | bbb      |    1
 aaa      |          |    1
 influx1a | influx1b | 2101
 influx2a | influx2b | 2102
 influx3a | influx3b | 2103
(7 rows)

--Testcase 36:
SELECT __spd_url FROM test2 ORDER BY __spd_url;
    __spd_url     
------------------
 /pgspider_srv_1/
 /pgspider_srv_1/
 /pgspider_srv_1/
 /pgspider_srv_1/
 /pgspider_srv_2/
 /pgspider_srv_2/
 /pgspider_srv_2/
(7 rows)

-- PGSpider Extension does not support SELECT IN
-- -- SELECT IN
-- --Testcase 37:
-- SELECT * FROM test1 IN ('/test1/') ORDER BY i;
-- --Testcase 38:
-- SELECT * FROM test1 IN ('/test1/') WHERE i>0 ORDER BY i;
-- --Testcase 39:
-- SELECT * FROM test2 IN ('/test2/') ORDER BY i;
-- --Testcase 40:
-- SELECT * FROM test2 IN ('/test2/') WHERE i<>500 ORDER BY __spd_url;
-- --Testcase 41:
-- SELECT * FROM test1 IN ('/pgspider_srv_2/influxdb_svr/') ORDER BY i;
--Testcase 42:
SELECT * FROM test1 WHERE __spd_url = '/pgspider_srv_2/influxdb_svr/' ORDER BY i;
 i | __spd_url 
---+-----------
(0 rows)

-- --Testcase 43:
-- SELECT * FROM test1 IN ('/pgspider_srv_2/griddb_svr/') ORDER BY i;
--Testcase 44:
SELECT * FROM test1 WHERE __spd_url = '/pgspider_srv_2/griddb_svr/' ORDER BY i;
 i | __spd_url 
---+-----------
(0 rows)

-- --Testcase 45:
-- SELECT * FROM test1 IN ('/pgspider_srv_2/file_svr/') ORDER BY i;
--Testcase 46:
SELECT * FROM test1 WHERE __spd_url = '/pgspider_srv_2/file_svr/' ORDER BY i;
 i | __spd_url 
---+-----------
(0 rows)

-- --Testcase 47:
-- SELECT * FROM test2 IN ('/pgspider_srv_2/influxdb_svr/') ORDER BY i, t, t2, __spd_url;
--Testcase 48:
SELECT * FROM test2 WHERE __spd_url = '/pgspider_srv_2/influxdb_svr/' ORDER BY i, t, t2, __spd_url;
 t | t2 | i | __spd_url 
---+----+---+-----------
(0 rows)

-- SELECT WHERE
--Testcase 49:
SELECT * FROM test1 WHERE (i + 1000) = 1777 ORDER BY i, __spd_url;
  i  |    __spd_url     
-----+------------------
 777 | /pgspider_srv_1/
 777 | /pgspider_srv_1/
 777 | /pgspider_srv_1/
 777 | /pgspider_srv_1/
(4 rows)

--Testcase 50:
SELECT * FROM test1 WHERE (i * 2) = 44444 ORDER BY i, __spd_url;
   i   |    __spd_url     
-------+------------------
 22222 | /pgspider_srv_1/
(1 row)

--Testcase 51:
SELECT * FROM test1 WHERE i < 5 AND i > 0 ORDER BY i, __spd_url;
 i |    __spd_url     
---+------------------
 1 | /pgspider_srv_1/
 1 | /pgspider_srv_1/
 1 | /pgspider_srv_1/
 1 | /pgspider_srv_2/
 2 | /pgspider_srv_2/
 3 | /pgspider_srv_2/
 4 | /pgspider_srv_2/
(7 rows)

--SELECT MAX(i) FROM test1 WHERE i < 2000;
--Testcase 52:
SELECT t, i FROM test2 WHERE (i + 1000) = 1001 ORDER BY i, t, t2, __spd_url;
  t  | i 
-----+---
 aaa | 1
 aaa | 1
 aaa | 1
 aaa | 1
(4 rows)

--Testcase 53:
SELECT * FROM test2 WHERE (i * 2) = 4204 ORDER BY i, t, t2, __spd_url;
    t     |    t2    |  i   |    __spd_url     
----------+----------+------+------------------
 influx2a | influx2b | 2102 | /pgspider_srv_2/
(1 row)

--Testcase 54:
SELECT * FROM test2 WHERE i > 0 AND i <> 2103 ORDER BY i, t, t2, __spd_url;
    t     |    t2    |  i   |    __spd_url     
----------+----------+------+------------------
 aaa      | bbb      |    1 | /pgspider_srv_1/
 aaa      | bbb      |    1 | /pgspider_srv_1/
 aaa      | bbb      |    1 | /pgspider_srv_1/
 aaa      |          |    1 | /pgspider_srv_1/
 influx1a | influx1b | 2101 | /pgspider_srv_2/
 influx2a | influx2b | 2102 | /pgspider_srv_2/
(6 rows)

--Testcase 55:
SELECT * FROM test2 WHERE t = 'influx1a' ORDER BY i, t, t2, __spd_url;
    t     |    t2    |  i   |    __spd_url     
----------+----------+------+------------------
 influx1a | influx1b | 2101 | /pgspider_srv_2/
(1 row)

--Testcase 56:
SELECT * FROM test2 WHERE t2 IS NULL AND i < 1000 ORDER BY i, t, t2, __spd_url;
  t  | t2 | i |    __spd_url     
-----+----+---+------------------
 aaa |    | 1 | /pgspider_srv_1/
(1 row)

--SELECT MAX(i) FROM test2 WHERE i < 2002;
-- GROUP BY with __spd_url tests
--Testcase 78:
EXPLAIN VERBOSE
SELECT i, __spd_url FROM test2 GROUP BY i, __spd_url ORDER BY i;
                                      QUERY PLAN                                       
---------------------------------------------------------------------------------------
 Sort  (cost=336.61..337.61 rows=400 width=36)
   Output: test2.i, test2.__spd_url
   Sort Key: test2.i
   ->  Append  (cost=108.53..319.32 rows=400 width=36)
         ->  Foreign Scan  (cost=108.53..158.66 rows=200 width=36)
               Output: test2.i, test2.__spd_url
                 Relations: Aggregate on (public.test2__pgspider_srv_1__test2 test2)
                 Remote SQL: SELECT i FROM public.test2 GROUP BY 1
         ->  Foreign Scan  (cost=108.53..158.66 rows=200 width=36)
               Output: test2_1.i, test2_1.__spd_url
                 Relations: Aggregate on (public.test2__pgspider_srv_2__test2 test2_1)
                 Remote SQL: SELECT i FROM public.test2 GROUP BY 1
(12 rows)

--Testcase 79:
SELECT i, __spd_url FROM test2 GROUP BY i, __spd_url ORDER BY i;
  i   |    __spd_url     
------+------------------
    1 | /pgspider_srv_1/
 2101 | /pgspider_srv_2/
 2102 | /pgspider_srv_2/
 2103 | /pgspider_srv_2/
(4 rows)

--Testcase 80:
EXPLAIN VERBOSE
SELECT i, __spd_url FROM test2 GROUP BY __spd_url, i ORDER BY i;
                                      QUERY PLAN                                       
---------------------------------------------------------------------------------------
 Sort  (cost=336.61..337.61 rows=400 width=36)
   Output: test2.i, test2.__spd_url
   Sort Key: test2.i
   ->  Append  (cost=108.53..319.32 rows=400 width=36)
         ->  Foreign Scan  (cost=108.53..158.66 rows=200 width=36)
               Output: test2.i, test2.__spd_url
                 Relations: Aggregate on (public.test2__pgspider_srv_1__test2 test2)
                 Remote SQL: SELECT i FROM public.test2 GROUP BY 1
         ->  Foreign Scan  (cost=108.53..158.66 rows=200 width=36)
               Output: test2_1.i, test2_1.__spd_url
                 Relations: Aggregate on (public.test2__pgspider_srv_2__test2 test2_1)
                 Remote SQL: SELECT i FROM public.test2 GROUP BY 1
(12 rows)

--Testcase 81:
SELECT i, __spd_url FROM test2 GROUP BY __spd_url, i ORDER BY i;
  i   |    __spd_url     
------+------------------
    1 | /pgspider_srv_1/
 2101 | /pgspider_srv_2/
 2102 | /pgspider_srv_2/
 2103 | /pgspider_srv_2/
(4 rows)

--Testcase 82:
EXPLAIN VERBOSE
SELECT i, __spd_url, __spd_url FROM test2 GROUP BY __spd_url, i ORDER BY i;
                                      QUERY PLAN                                       
---------------------------------------------------------------------------------------
 Sort  (cost=336.61..337.61 rows=400 width=68)
   Output: test2.i, test2.__spd_url, test2.__spd_url
   Sort Key: test2.i
   ->  Append  (cost=108.53..319.32 rows=400 width=68)
         ->  Foreign Scan  (cost=108.53..158.66 rows=200 width=68)
               Output: test2.i, test2.__spd_url, test2.__spd_url
                 Relations: Aggregate on (public.test2__pgspider_srv_1__test2 test2)
                 Remote SQL: SELECT i FROM public.test2 GROUP BY 1
         ->  Foreign Scan  (cost=108.53..158.66 rows=200 width=68)
               Output: test2_1.i, test2_1.__spd_url, test2_1.__spd_url
                 Relations: Aggregate on (public.test2__pgspider_srv_2__test2 test2_1)
                 Remote SQL: SELECT i FROM public.test2 GROUP BY 1
(12 rows)

--Testcase 83:
SELECT i, __spd_url, __spd_url FROM test2 GROUP BY __spd_url, i ORDER BY i;
  i   |    __spd_url     |    __spd_url     
------+------------------+------------------
    1 | /pgspider_srv_1/ | /pgspider_srv_1/
 2101 | /pgspider_srv_2/ | /pgspider_srv_2/
 2102 | /pgspider_srv_2/ | /pgspider_srv_2/
 2103 | /pgspider_srv_2/ | /pgspider_srv_2/
(4 rows)

--Testcase 84:
EXPLAIN VERBOSE
SELECT __spd_url, i FROM test2 GROUP BY __spd_url, i ORDER BY i;
                                      QUERY PLAN                                       
---------------------------------------------------------------------------------------
 Sort  (cost=336.61..337.61 rows=400 width=36)
   Output: test2.__spd_url, test2.i
   Sort Key: test2.i
   ->  Append  (cost=108.53..319.32 rows=400 width=36)
         ->  Foreign Scan  (cost=108.53..158.66 rows=200 width=36)
               Output: test2.__spd_url, test2.i
                 Relations: Aggregate on (public.test2__pgspider_srv_1__test2 test2)
                 Remote SQL: SELECT i FROM public.test2 GROUP BY 1
         ->  Foreign Scan  (cost=108.53..158.66 rows=200 width=36)
               Output: test2_1.__spd_url, test2_1.i
                 Relations: Aggregate on (public.test2__pgspider_srv_2__test2 test2_1)
                 Remote SQL: SELECT i FROM public.test2 GROUP BY 1
(12 rows)

--Testcase 85:
SELECT __spd_url, i FROM test2 GROUP BY __spd_url, i ORDER BY i;
    __spd_url     |  i   
------------------+------
 /pgspider_srv_1/ |    1
 /pgspider_srv_2/ | 2101
 /pgspider_srv_2/ | 2102
 /pgspider_srv_2/ | 2103
(4 rows)

--Testcase 86:
EXPLAIN VERBOSE
SELECT __spd_url, i FROM test2 GROUP BY i, __spd_url ORDER BY i;
                                      QUERY PLAN                                       
---------------------------------------------------------------------------------------
 Sort  (cost=336.61..337.61 rows=400 width=36)
   Output: test2.__spd_url, test2.i
   Sort Key: test2.i
   ->  Append  (cost=108.53..319.32 rows=400 width=36)
         ->  Foreign Scan  (cost=108.53..158.66 rows=200 width=36)
               Output: test2.__spd_url, test2.i
                 Relations: Aggregate on (public.test2__pgspider_srv_1__test2 test2)
                 Remote SQL: SELECT i FROM public.test2 GROUP BY 1
         ->  Foreign Scan  (cost=108.53..158.66 rows=200 width=36)
               Output: test2_1.__spd_url, test2_1.i
                 Relations: Aggregate on (public.test2__pgspider_srv_2__test2 test2_1)
                 Remote SQL: SELECT i FROM public.test2 GROUP BY 1
(12 rows)

--Testcase 87:
SELECT __spd_url, i FROM test2 GROUP BY i, __spd_url ORDER BY i;
    __spd_url     |  i   
------------------+------
 /pgspider_srv_1/ |    1
 /pgspider_srv_2/ | 2101
 /pgspider_srv_2/ | 2102
 /pgspider_srv_2/ | 2103
(4 rows)

--Testcase 88:
EXPLAIN VERBOSE
SELECT __spd_url, i, __spd_url FROM test2 GROUP BY i, __spd_url ORDER BY i;
                                      QUERY PLAN                                       
---------------------------------------------------------------------------------------
 Sort  (cost=336.61..337.61 rows=400 width=68)
   Output: test2.__spd_url, test2.i, test2.__spd_url
   Sort Key: test2.i
   ->  Append  (cost=108.53..319.32 rows=400 width=68)
         ->  Foreign Scan  (cost=108.53..158.66 rows=200 width=68)
               Output: test2.__spd_url, test2.i, test2.__spd_url
                 Relations: Aggregate on (public.test2__pgspider_srv_1__test2 test2)
                 Remote SQL: SELECT i FROM public.test2 GROUP BY 1
         ->  Foreign Scan  (cost=108.53..158.66 rows=200 width=68)
               Output: test2_1.__spd_url, test2_1.i, test2_1.__spd_url
                 Relations: Aggregate on (public.test2__pgspider_srv_2__test2 test2_1)
                 Remote SQL: SELECT i FROM public.test2 GROUP BY 1
(12 rows)

--Testcase 89:
SELECT __spd_url, i, __spd_url FROM test2 GROUP BY i, __spd_url ORDER BY i;
    __spd_url     |  i   |    __spd_url     
------------------+------+------------------
 /pgspider_srv_1/ |    1 | /pgspider_srv_1/
 /pgspider_srv_2/ | 2101 | /pgspider_srv_2/
 /pgspider_srv_2/ | 2102 | /pgspider_srv_2/
 /pgspider_srv_2/ | 2103 | /pgspider_srv_2/
(4 rows)

--Testcase 90:
EXPLAIN VERBOSE
SELECT avg(i), __spd_url FROM test2 GROUP BY __spd_url;
                                                   QUERY PLAN                                                   
----------------------------------------------------------------------------------------------------------------
 Append  (cost=229.45..465.91 rows=400 width=64)
   ->  HashAggregate  (cost=229.45..231.95 rows=200 width=64)
         Output: avg(test2.i), test2.__spd_url
         Group Key: test2.__spd_url
         ->  Foreign Scan on public.test2_pgspider_srv_child1 test2  (cost=100.00..212.39 rows=3413 width=36)
               Output: test2.__spd_url, test2.i
                 Remote SQL: SELECT i FROM public.test2
   ->  HashAggregate  (cost=229.45..231.95 rows=200 width=64)
         Output: avg(test2_1.i), test2_1.__spd_url
         Group Key: test2_1.__spd_url
         ->  Foreign Scan on public.test2_pgspider_srv_child2 test2_1  (cost=100.00..212.39 rows=3413 width=36)
               Output: test2_1.__spd_url, test2_1.i
                 Remote SQL: SELECT i FROM public.test2
(13 rows)

--Testcase 91:
SELECT avg(i), __spd_url FROM test2 GROUP BY __spd_url;
          avg           |    __spd_url     
------------------------+------------------
 1.00000000000000000000 | /pgspider_srv_1/
  2102.0000000000000000 | /pgspider_srv_2/
(2 rows)

--Testcase 92:
EXPLAIN VERBOSE
SELECT avg(i), __spd_url, __spd_url FROM test2 GROUP BY __spd_url;
                                                   QUERY PLAN                                                   
----------------------------------------------------------------------------------------------------------------
 Append  (cost=229.45..465.91 rows=400 width=96)
   ->  HashAggregate  (cost=229.45..231.95 rows=200 width=96)
         Output: avg(test2.i), test2.__spd_url, test2.__spd_url
         Group Key: test2.__spd_url
         ->  Foreign Scan on public.test2_pgspider_srv_child1 test2  (cost=100.00..212.39 rows=3413 width=36)
               Output: test2.__spd_url, test2.i
                 Remote SQL: SELECT i FROM public.test2
   ->  HashAggregate  (cost=229.45..231.95 rows=200 width=96)
         Output: avg(test2_1.i), test2_1.__spd_url, test2_1.__spd_url
         Group Key: test2_1.__spd_url
         ->  Foreign Scan on public.test2_pgspider_srv_child2 test2_1  (cost=100.00..212.39 rows=3413 width=36)
               Output: test2_1.__spd_url, test2_1.i
                 Remote SQL: SELECT i FROM public.test2
(13 rows)

--Testcase 93:
SELECT avg(i), __spd_url, __spd_url FROM test2 GROUP BY __spd_url;
          avg           |    __spd_url     |    __spd_url     
------------------------+------------------+------------------
 1.00000000000000000000 | /pgspider_srv_1/ | /pgspider_srv_1/
  2102.0000000000000000 | /pgspider_srv_2/ | /pgspider_srv_2/
(2 rows)

--Testcase 94:
EXPLAIN VERBOSE
SELECT __spd_url, avg(i) FROM test2 GROUP BY __spd_url;
                                                   QUERY PLAN                                                   
----------------------------------------------------------------------------------------------------------------
 Append  (cost=229.45..465.91 rows=400 width=64)
   ->  HashAggregate  (cost=229.45..231.95 rows=200 width=64)
         Output: test2.__spd_url, avg(test2.i)
         Group Key: test2.__spd_url
         ->  Foreign Scan on public.test2_pgspider_srv_child1 test2  (cost=100.00..212.39 rows=3413 width=36)
               Output: test2.__spd_url, test2.i
                 Remote SQL: SELECT i FROM public.test2
   ->  HashAggregate  (cost=229.45..231.95 rows=200 width=64)
         Output: test2_1.__spd_url, avg(test2_1.i)
         Group Key: test2_1.__spd_url
         ->  Foreign Scan on public.test2_pgspider_srv_child2 test2_1  (cost=100.00..212.39 rows=3413 width=36)
               Output: test2_1.__spd_url, test2_1.i
                 Remote SQL: SELECT i FROM public.test2
(13 rows)

--Testcase 95:
SELECT __spd_url, avg(i) FROM test2 GROUP BY __spd_url;
    __spd_url     |          avg           
------------------+------------------------
 /pgspider_srv_1/ | 1.00000000000000000000
 /pgspider_srv_2/ |  2102.0000000000000000
(2 rows)

--Testcase 96:
EXPLAIN VERBOSE
SELECT __spd_url, avg(i), __spd_url FROM test2 GROUP BY __spd_url;
                                                   QUERY PLAN                                                   
----------------------------------------------------------------------------------------------------------------
 Append  (cost=229.45..465.91 rows=400 width=96)
   ->  HashAggregate  (cost=229.45..231.95 rows=200 width=96)
         Output: test2.__spd_url, avg(test2.i), test2.__spd_url
         Group Key: test2.__spd_url
         ->  Foreign Scan on public.test2_pgspider_srv_child1 test2  (cost=100.00..212.39 rows=3413 width=36)
               Output: test2.__spd_url, test2.i
                 Remote SQL: SELECT i FROM public.test2
   ->  HashAggregate  (cost=229.45..231.95 rows=200 width=96)
         Output: test2_1.__spd_url, avg(test2_1.i), test2_1.__spd_url
         Group Key: test2_1.__spd_url
         ->  Foreign Scan on public.test2_pgspider_srv_child2 test2_1  (cost=100.00..212.39 rows=3413 width=36)
               Output: test2_1.__spd_url, test2_1.i
                 Remote SQL: SELECT i FROM public.test2
(13 rows)

--Testcase 97:
SELECT __spd_url, avg(i), __spd_url FROM test2 GROUP BY __spd_url;
    __spd_url     |          avg           |    __spd_url     
------------------+------------------------+------------------
 /pgspider_srv_1/ | 1.00000000000000000000 | /pgspider_srv_1/
 /pgspider_srv_2/ |  2102.0000000000000000 | /pgspider_srv_2/
(2 rows)

--Testcase 98:
EXPLAIN VERBOSE
SELECT i, __spd_url FROM test1 GROUP BY i, __spd_url ORDER BY i;
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Sort  (cost=336.61..337.61 rows=400 width=36)
   Output: test1.i, test1.__spd_url
   Sort Key: test1.i
   ->  Append  (cost=108.53..319.32 rows=400 width=36)
         ->  Foreign Scan  (cost=108.53..158.66 rows=200 width=36)
               Output: test1.i, test1.__spd_url
                 Relations: Aggregate on (public.test1__pgspider_srv_1__test test1)
                 Remote SQL: SELECT i FROM public.test1 GROUP BY 1
         ->  Foreign Scan  (cost=108.53..158.66 rows=200 width=36)
               Output: test1_1.i, test1_1.__spd_url
                 Relations: Aggregate on (public.test1__pgspider_srv_2__test test1_1)
                 Remote SQL: SELECT i FROM public.test1 GROUP BY 1
(12 rows)

--Testcase 99:
SELECT i, __spd_url FROM test1 GROUP BY i, __spd_url ORDER BY i;
   i   |    __spd_url     
-------+------------------
     1 | /pgspider_srv_1/
     1 | /pgspider_srv_2/
     2 | /pgspider_srv_2/
     3 | /pgspider_srv_2/
     4 | /pgspider_srv_2/
   777 | /pgspider_srv_1/
  1111 | /pgspider_srv_1/
  2001 | /pgspider_srv_2/
  2002 | /pgspider_srv_2/
  3001 | /pgspider_srv_2/
  3002 | /pgspider_srv_2/
 22222 | /pgspider_srv_1/
(12 rows)

--Testcase 100:
EXPLAIN VERBOSE
SELECT i, __spd_url FROM test1 GROUP BY __spd_url, i ORDER BY i;
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Sort  (cost=336.61..337.61 rows=400 width=36)
   Output: test1.i, test1.__spd_url
   Sort Key: test1.i
   ->  Append  (cost=108.53..319.32 rows=400 width=36)
         ->  Foreign Scan  (cost=108.53..158.66 rows=200 width=36)
               Output: test1.i, test1.__spd_url
                 Relations: Aggregate on (public.test1__pgspider_srv_1__test test1)
                 Remote SQL: SELECT i FROM public.test1 GROUP BY 1
         ->  Foreign Scan  (cost=108.53..158.66 rows=200 width=36)
               Output: test1_1.i, test1_1.__spd_url
                 Relations: Aggregate on (public.test1__pgspider_srv_2__test test1_1)
                 Remote SQL: SELECT i FROM public.test1 GROUP BY 1
(12 rows)

--Testcase 101:
SELECT i, __spd_url FROM test1 GROUP BY __spd_url, i ORDER BY i;
   i   |    __spd_url     
-------+------------------
     1 | /pgspider_srv_1/
     1 | /pgspider_srv_2/
     2 | /pgspider_srv_2/
     3 | /pgspider_srv_2/
     4 | /pgspider_srv_2/
   777 | /pgspider_srv_1/
  1111 | /pgspider_srv_1/
  2001 | /pgspider_srv_2/
  2002 | /pgspider_srv_2/
  3001 | /pgspider_srv_2/
  3002 | /pgspider_srv_2/
 22222 | /pgspider_srv_1/
(12 rows)

--Testcase 102:
EXPLAIN VERBOSE
SELECT i, __spd_url, __spd_url FROM test1 GROUP BY __spd_url, i ORDER BY i;
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Sort  (cost=336.61..337.61 rows=400 width=68)
   Output: test1.i, test1.__spd_url, test1.__spd_url
   Sort Key: test1.i
   ->  Append  (cost=108.53..319.32 rows=400 width=68)
         ->  Foreign Scan  (cost=108.53..158.66 rows=200 width=68)
               Output: test1.i, test1.__spd_url, test1.__spd_url
                 Relations: Aggregate on (public.test1__pgspider_srv_1__test test1)
                 Remote SQL: SELECT i FROM public.test1 GROUP BY 1
         ->  Foreign Scan  (cost=108.53..158.66 rows=200 width=68)
               Output: test1_1.i, test1_1.__spd_url, test1_1.__spd_url
                 Relations: Aggregate on (public.test1__pgspider_srv_2__test test1_1)
                 Remote SQL: SELECT i FROM public.test1 GROUP BY 1
(12 rows)

--Testcase 103:
SELECT i, __spd_url, __spd_url FROM test1 GROUP BY __spd_url, i ORDER BY i;
   i   |    __spd_url     |    __spd_url     
-------+------------------+------------------
     1 | /pgspider_srv_1/ | /pgspider_srv_1/
     1 | /pgspider_srv_2/ | /pgspider_srv_2/
     2 | /pgspider_srv_2/ | /pgspider_srv_2/
     3 | /pgspider_srv_2/ | /pgspider_srv_2/
     4 | /pgspider_srv_2/ | /pgspider_srv_2/
   777 | /pgspider_srv_1/ | /pgspider_srv_1/
  1111 | /pgspider_srv_1/ | /pgspider_srv_1/
  2001 | /pgspider_srv_2/ | /pgspider_srv_2/
  2002 | /pgspider_srv_2/ | /pgspider_srv_2/
  3001 | /pgspider_srv_2/ | /pgspider_srv_2/
  3002 | /pgspider_srv_2/ | /pgspider_srv_2/
 22222 | /pgspider_srv_1/ | /pgspider_srv_1/
(12 rows)

--Testcase 104:
EXPLAIN VERBOSE
SELECT __spd_url, i FROM test1 GROUP BY __spd_url, i ORDER BY i;
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Sort  (cost=336.61..337.61 rows=400 width=36)
   Output: test1.__spd_url, test1.i
   Sort Key: test1.i
   ->  Append  (cost=108.53..319.32 rows=400 width=36)
         ->  Foreign Scan  (cost=108.53..158.66 rows=200 width=36)
               Output: test1.__spd_url, test1.i
                 Relations: Aggregate on (public.test1__pgspider_srv_1__test test1)
                 Remote SQL: SELECT i FROM public.test1 GROUP BY 1
         ->  Foreign Scan  (cost=108.53..158.66 rows=200 width=36)
               Output: test1_1.__spd_url, test1_1.i
                 Relations: Aggregate on (public.test1__pgspider_srv_2__test test1_1)
                 Remote SQL: SELECT i FROM public.test1 GROUP BY 1
(12 rows)

--Testcase 105:
SELECT __spd_url, i FROM test1 GROUP BY __spd_url, i ORDER BY i;
    __spd_url     |   i   
------------------+-------
 /pgspider_srv_1/ |     1
 /pgspider_srv_2/ |     1
 /pgspider_srv_2/ |     2
 /pgspider_srv_2/ |     3
 /pgspider_srv_2/ |     4
 /pgspider_srv_1/ |   777
 /pgspider_srv_1/ |  1111
 /pgspider_srv_2/ |  2001
 /pgspider_srv_2/ |  2002
 /pgspider_srv_2/ |  3001
 /pgspider_srv_2/ |  3002
 /pgspider_srv_1/ | 22222
(12 rows)

--Testcase 106:
EXPLAIN VERBOSE
SELECT __spd_url, i FROM test1 GROUP BY i, __spd_url ORDER BY i;
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Sort  (cost=336.61..337.61 rows=400 width=36)
   Output: test1.__spd_url, test1.i
   Sort Key: test1.i
   ->  Append  (cost=108.53..319.32 rows=400 width=36)
         ->  Foreign Scan  (cost=108.53..158.66 rows=200 width=36)
               Output: test1.__spd_url, test1.i
                 Relations: Aggregate on (public.test1__pgspider_srv_1__test test1)
                 Remote SQL: SELECT i FROM public.test1 GROUP BY 1
         ->  Foreign Scan  (cost=108.53..158.66 rows=200 width=36)
               Output: test1_1.__spd_url, test1_1.i
                 Relations: Aggregate on (public.test1__pgspider_srv_2__test test1_1)
                 Remote SQL: SELECT i FROM public.test1 GROUP BY 1
(12 rows)

--Testcase 107:
SELECT __spd_url, i FROM test1 GROUP BY i, __spd_url ORDER BY i;
    __spd_url     |   i   
------------------+-------
 /pgspider_srv_1/ |     1
 /pgspider_srv_2/ |     1
 /pgspider_srv_2/ |     2
 /pgspider_srv_2/ |     3
 /pgspider_srv_2/ |     4
 /pgspider_srv_1/ |   777
 /pgspider_srv_1/ |  1111
 /pgspider_srv_2/ |  2001
 /pgspider_srv_2/ |  2002
 /pgspider_srv_2/ |  3001
 /pgspider_srv_2/ |  3002
 /pgspider_srv_1/ | 22222
(12 rows)

--Testcase 108:
EXPLAIN VERBOSE
SELECT __spd_url, i, __spd_url FROM test1 GROUP BY i, __spd_url ORDER BY i;
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Sort  (cost=336.61..337.61 rows=400 width=68)
   Output: test1.__spd_url, test1.i, test1.__spd_url
   Sort Key: test1.i
   ->  Append  (cost=108.53..319.32 rows=400 width=68)
         ->  Foreign Scan  (cost=108.53..158.66 rows=200 width=68)
               Output: test1.__spd_url, test1.i, test1.__spd_url
                 Relations: Aggregate on (public.test1__pgspider_srv_1__test test1)
                 Remote SQL: SELECT i FROM public.test1 GROUP BY 1
         ->  Foreign Scan  (cost=108.53..158.66 rows=200 width=68)
               Output: test1_1.__spd_url, test1_1.i, test1_1.__spd_url
                 Relations: Aggregate on (public.test1__pgspider_srv_2__test test1_1)
                 Remote SQL: SELECT i FROM public.test1 GROUP BY 1
(12 rows)

--Testcase 109:
SELECT __spd_url, i, __spd_url FROM test1 GROUP BY i, __spd_url ORDER BY i;
    __spd_url     |   i   |    __spd_url     
------------------+-------+------------------
 /pgspider_srv_1/ |     1 | /pgspider_srv_1/
 /pgspider_srv_2/ |     1 | /pgspider_srv_2/
 /pgspider_srv_2/ |     2 | /pgspider_srv_2/
 /pgspider_srv_2/ |     3 | /pgspider_srv_2/
 /pgspider_srv_2/ |     4 | /pgspider_srv_2/
 /pgspider_srv_1/ |   777 | /pgspider_srv_1/
 /pgspider_srv_1/ |  1111 | /pgspider_srv_1/
 /pgspider_srv_2/ |  2001 | /pgspider_srv_2/
 /pgspider_srv_2/ |  2002 | /pgspider_srv_2/
 /pgspider_srv_2/ |  3001 | /pgspider_srv_2/
 /pgspider_srv_2/ |  3002 | /pgspider_srv_2/
 /pgspider_srv_1/ | 22222 | /pgspider_srv_1/
(12 rows)

--Testcase 110:
EXPLAIN VERBOSE
SELECT avg(i), __spd_url FROM test1 GROUP BY __spd_url;
                                                   QUERY PLAN                                                   
----------------------------------------------------------------------------------------------------------------
 Append  (cost=229.45..465.91 rows=400 width=64)
   ->  HashAggregate  (cost=229.45..231.95 rows=200 width=64)
         Output: avg(test1.i), test1.__spd_url
         Group Key: test1.__spd_url
         ->  Foreign Scan on public.test1_pgspider_srv_child1 test1  (cost=100.00..212.39 rows=3413 width=36)
               Output: test1.__spd_url, test1.i
                 Remote SQL: SELECT i FROM public.test1
   ->  HashAggregate  (cost=229.45..231.95 rows=200 width=64)
         Output: avg(test1_1.i), test1_1.__spd_url
         Group Key: test1_1.__spd_url
         ->  Foreign Scan on public.test1_pgspider_srv_child2 test1_1  (cost=100.00..212.39 rows=3413 width=36)
               Output: test1_1.__spd_url, test1_1.i
                 Remote SQL: SELECT i FROM public.test1
(13 rows)

--Testcase 111:
SELECT avg(i), __spd_url FROM test1 GROUP BY __spd_url;
          avg          |    __spd_url     
-----------------------+------------------
 2938.2222222222222222 | /pgspider_srv_1/
 1252.0000000000000000 | /pgspider_srv_2/
(2 rows)

--Testcase 112:
EXPLAIN VERBOSE
SELECT avg(i), __spd_url, __spd_url FROM test1 GROUP BY __spd_url;
                                                   QUERY PLAN                                                   
----------------------------------------------------------------------------------------------------------------
 Append  (cost=229.45..465.91 rows=400 width=96)
   ->  HashAggregate  (cost=229.45..231.95 rows=200 width=96)
         Output: avg(test1.i), test1.__spd_url, test1.__spd_url
         Group Key: test1.__spd_url
         ->  Foreign Scan on public.test1_pgspider_srv_child1 test1  (cost=100.00..212.39 rows=3413 width=36)
               Output: test1.__spd_url, test1.i
                 Remote SQL: SELECT i FROM public.test1
   ->  HashAggregate  (cost=229.45..231.95 rows=200 width=96)
         Output: avg(test1_1.i), test1_1.__spd_url, test1_1.__spd_url
         Group Key: test1_1.__spd_url
         ->  Foreign Scan on public.test1_pgspider_srv_child2 test1_1  (cost=100.00..212.39 rows=3413 width=36)
               Output: test1_1.__spd_url, test1_1.i
                 Remote SQL: SELECT i FROM public.test1
(13 rows)

--Testcase 113:
SELECT avg(i), __spd_url, __spd_url FROM test1 GROUP BY __spd_url;
          avg          |    __spd_url     |    __spd_url     
-----------------------+------------------+------------------
 2938.2222222222222222 | /pgspider_srv_1/ | /pgspider_srv_1/
 1252.0000000000000000 | /pgspider_srv_2/ | /pgspider_srv_2/
(2 rows)

--Testcase 114:
EXPLAIN VERBOSE
SELECT __spd_url, avg(i) FROM test1 GROUP BY __spd_url;
                                                   QUERY PLAN                                                   
----------------------------------------------------------------------------------------------------------------
 Append  (cost=229.45..465.91 rows=400 width=64)
   ->  HashAggregate  (cost=229.45..231.95 rows=200 width=64)
         Output: test1.__spd_url, avg(test1.i)
         Group Key: test1.__spd_url
         ->  Foreign Scan on public.test1_pgspider_srv_child1 test1  (cost=100.00..212.39 rows=3413 width=36)
               Output: test1.__spd_url, test1.i
                 Remote SQL: SELECT i FROM public.test1
   ->  HashAggregate  (cost=229.45..231.95 rows=200 width=64)
         Output: test1_1.__spd_url, avg(test1_1.i)
         Group Key: test1_1.__spd_url
         ->  Foreign Scan on public.test1_pgspider_srv_child2 test1_1  (cost=100.00..212.39 rows=3413 width=36)
               Output: test1_1.__spd_url, test1_1.i
                 Remote SQL: SELECT i FROM public.test1
(13 rows)

--Testcase 115:
SELECT __spd_url, avg(i) FROM test1 GROUP BY __spd_url;
    __spd_url     |          avg          
------------------+-----------------------
 /pgspider_srv_1/ | 2938.2222222222222222
 /pgspider_srv_2/ | 1252.0000000000000000
(2 rows)

--Testcase 116:
EXPLAIN VERBOSE
SELECT __spd_url, avg(i), __spd_url FROM test1 GROUP BY __spd_url;
                                                   QUERY PLAN                                                   
----------------------------------------------------------------------------------------------------------------
 Append  (cost=229.45..465.91 rows=400 width=96)
   ->  HashAggregate  (cost=229.45..231.95 rows=200 width=96)
         Output: test1.__spd_url, avg(test1.i), test1.__spd_url
         Group Key: test1.__spd_url
         ->  Foreign Scan on public.test1_pgspider_srv_child1 test1  (cost=100.00..212.39 rows=3413 width=36)
               Output: test1.__spd_url, test1.i
                 Remote SQL: SELECT i FROM public.test1
   ->  HashAggregate  (cost=229.45..231.95 rows=200 width=96)
         Output: test1_1.__spd_url, avg(test1_1.i), test1_1.__spd_url
         Group Key: test1_1.__spd_url
         ->  Foreign Scan on public.test1_pgspider_srv_child2 test1_1  (cost=100.00..212.39 rows=3413 width=36)
               Output: test1_1.__spd_url, test1_1.i
                 Remote SQL: SELECT i FROM public.test1
(13 rows)

--Testcase 117:
SELECT __spd_url, avg(i), __spd_url FROM test1 GROUP BY __spd_url;
    __spd_url     |          avg          |    __spd_url     
------------------+-----------------------+------------------
 /pgspider_srv_1/ | 2938.2222222222222222 | /pgspider_srv_1/
 /pgspider_srv_2/ | 1252.0000000000000000 | /pgspider_srv_2/
(2 rows)

-- DROP FOREIGN TABLE
--Testcase 118:
DROP FOREIGN TABLE test1__pgspider_srv_2__test;
--Testcase 132:
DROP FOREIGN TABLE test1_pgspider_srv_child2;
--Testcase 57:
SELECT * FROM test1_pgspider_srv_child2;
ERROR:  relation "test1_pgspider_srv_child2" does not exist
LINE 1: SELECT * FROM test1_pgspider_srv_child2;
                      ^
--Testcase 58:
SELECT * FROM test1 ORDER BY i, __spd_url;
   i   |    __spd_url     
-------+------------------
     1 | /pgspider_srv_1/
     1 | /pgspider_srv_1/
     1 | /pgspider_srv_1/
   777 | /pgspider_srv_1/
   777 | /pgspider_srv_1/
   777 | /pgspider_srv_1/
   777 | /pgspider_srv_1/
  1111 | /pgspider_srv_1/
 22222 | /pgspider_srv_1/
(9 rows)

--Testcase 59:
SELECT * FROM test1 WHERE i = 1 OR i = 777 ORDER BY i, __spd_url ;
  i  |    __spd_url     
-----+------------------
   1 | /pgspider_srv_1/
   1 | /pgspider_srv_1/
   1 | /pgspider_srv_1/
 777 | /pgspider_srv_1/
 777 | /pgspider_srv_1/
 777 | /pgspider_srv_1/
 777 | /pgspider_srv_1/
(7 rows)

--Testcase 119:
DROP FOREIGN TABLE test1__pgspider_srv_1__test;
--Testcase 133:
DROP FOREIGN TABLE test1_pgspider_srv_child1;
--Testcase 60:
SELECT * FROM test1_pgspider_srv_child1;
ERROR:  relation "test1_pgspider_srv_child1" does not exist
LINE 1: SELECT * FROM test1_pgspider_srv_child1;
                      ^
--Testcase 61:
SELECT * FROM test1 ORDER BY i, __spd_url;
 i | __spd_url 
---+-----------
(0 rows)

--Testcase 120:
DROP FOREIGN TABLE test2__pgspider_srv_1__test2;
--Testcase 134:
DROP FOREIGN TABLE test2_pgspider_srv_child1;
--Testcase 62:
SELECT * FROM test2 ORDER BY i, t, t2, __spd_url;
    t     |    t2    |  i   |    __spd_url     
----------+----------+------+------------------
 influx1a | influx1b | 2101 | /pgspider_srv_2/
 influx2a | influx2b | 2102 | /pgspider_srv_2/
 influx3a | influx3b | 2103 | /pgspider_srv_2/
(3 rows)

--Testcase 121:
DROP FOREIGN TABLE test2__pgspider_srv_2__test2;
--Testcase 135:
DROP FOREIGN TABLE test2_pgspider_srv_child2;
--Testcase 63:
SELECT * FROM test2 ORDER BY i, t, t2, __spd_url;
 t | t2 | i | __spd_url 
---+----+---+-----------
(0 rows)

-- Clean up
--Testcase 122:
DROP USER MAPPING FOR public SERVER pgspider_ext_svr;
--Testcase 123:
DROP USER MAPPING FOR public SERVER pgspider_srv_1;
--Testcase 124:
DROP USER MAPPING FOR public SERVER pgspider_srv_2;
--Testcase 125:
DROP TABLE test1;
--Testcase 126:
DROP TABLE test2;
--Testcase 127:
DROP SERVER pgspider_srv_1;
--Testcase 128:
DROP SERVER pgspider_srv_2;
--Testcase 129:
DROP SERVER pgspider_ext_svr;
--Testcase 130:
DROP EXTENSION pgspider_ext;
--Testcase 131:
DROP EXTENSION postgres_fdw;
